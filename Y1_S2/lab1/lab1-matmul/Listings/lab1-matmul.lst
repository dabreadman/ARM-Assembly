


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 1 - Matrix Multiplication
    4 00000000         ;
    5 00000000 00000004 
                       N       EQU              4
    6 00000000                 AREA             globals, DATA, READWRITE
    7 00000000         ; result matrix R
    8 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       ARR_R   SPACE            N*N*4       ; 4 * 4 * word-size
                                                             values
    9 00000040         
   10 00000040                 AREA             RESET, CODE, READONLY
   11 00000000                 ENTRY
   12 00000000 E59F0114        LDR              R0, =ARR_A
   13 00000004 E59F1114        LDR              R1, =ARR_B
   14 00000008 E59F2114        LDR              R2, =ARR_R
   15 0000000C E3A03004        LDR              R3, =N
   16 00000010         ; your program goes here
   17 00000010 E3A04000        LDR              R4, = 0     ;i
   18 00000014 E3A05000        LDR              R5, = 0     ;j
   19 00000018 E3A06000        LDR              R6, = 0     ;k
   20 0000001C E3A07000        LDR              R7, = 0     ;r
   21 00000020 E3A0B004        LDR              R11, = 4    ; byte offset
   22 00000024         fLoop1Start
   23 00000024 E1540003        CMP              R4, R3
   24 00000028 AA00001A        BGE              fLoop1End
   25 0000002C         
   26 0000002C         fLoop2Start
   27 0000002C E1550003        CMP              R5, R3
   28 00000030 AA000015        BGE              fLoop2End
   29 00000034         
   30 00000034 E3A07000        MOV              R7, #0      ; r = 0
   31 00000038         fLoop3Start
   32 00000038 E1560003        CMP              R6, R3
   33 0000003C AA00000B        BGE              fLoop3End
   34 00000040         
   35 00000040 E0080693        MUL              R8, R3, R6  ;kN
   36 00000044 E0888004        ADD              R8, R8, R4  ;kN + i



ARM Macro Assembler    Page 2 


   37 00000048 E008089B        MUL              R8, R11, R8 ;Add byte offset to
                                                             index
   38 0000004C         
   39 0000004C E7908008        LDR              R8, [R0, R8] ; Load value at A[
                                                            i,k]
   40 00000050         
   41 00000050         
   42 00000050 E0090593        MUL              R9, R3, R5  ;jN
   43 00000054 E0899006        ADD              R9, R9, R6  ;jN + k
   44 00000058 E009099B        MUL              R9, R11, R9 ;Add byte offset to
                                                             index
   45 0000005C         
   46 0000005C E7909009        LDR              R9, [R0, R9] ; Load value at B[
                                                            k,j]
   47 00000060         
   48 00000060         
   49 00000060 E0080899        MUL              R8, R9, R8  ; A[ i , k ] * B[ k
                                                             , j ]
   50 00000064 E0877008        ADD              R7, R7, R8  ; r = r + ( A[ i , 
                                                            k ] * B[ k , j ]
   51 00000068         
   52 00000068 E2866001        ADD              R6, R6, #1  ;k++
   53 0000006C EAFFFFF1        B                fLoop3Start
   54 00000070         
   55 00000070         fLoop3End
   56 00000070 E00A0593        MUL              R10, R3, R5 ;[i,j] 1D convert..
                                                            ..could use r9?
   57 00000074 E08AA004        ADD              R10, R10, R4 ;[i,j] 1D convert
   58 00000078 E00A0A9B        MUL              R10, R11, R10 ;Add byte offset 
                                                            to index........ R1
                                                            0 = memory address 
                                                            of [i,j]
   59 0000007C         
   60 0000007C E78A7002        STR              R7 , [R10,R2] ;R[ i , j ] = r ;
                                                            
   61 00000080         
   62 00000080 E2855001        ADD              R5, R5, #1  ;j++
   63 00000084 E3A06000        MOV              R6, #0
   64 00000088 EAFFFFE7        B                fLoop2Start
   65 0000008C         
   66 0000008C         fLoop2End
   67 0000008C E2844001        ADD              R4, R4, #1  ;i++
   68 00000090         
   69 00000090 E3A05000        MOV              R5, #0
   70 00000094         
   71 00000094 EAFFFFE2        B                fLoop1Start
   72 00000098         fLoop1End
   73 00000098         
   74 00000098 EAFFFFFE 
                       STOP    B                STOP
   75 0000009C         ; two constant value matrices, A and B
   76 0000009C 00000001 
              00000002 
              00000003 
              00000004 ARR_A   DCD              1,  2,  3,  4
   77 000000AC 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8



ARM Macro Assembler    Page 3 


   78 000000BC 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   79 000000CC 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   80 000000DC 00000001 
              00000002 
              00000003 
              00000004 ARR_B   DCD              1,  2,  3,  4
   81 000000EC 00000005 
              00000006 
              00000007 
              00000008         DCD              5,  6,  7,  8
   82 000000FC 00000009 
              0000000A 
              0000000B 
              0000000C         DCD              9, 10, 11, 12
   83 0000010C 0000000D 
              0000000E 
              0000000F 
              00000010         DCD              13, 14, 15, 16
   84 0000011C         
   85 0000011C         
   86 0000011C                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab1-matmul.d -o.\objects\lab1-matmul.o -IC:\Keil_v5\ARM\RV31\INC -IC:\K
eil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\lab1-matmul.lst l
ab1-matmul.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_R 00000000

Symbol: ARR_R
   Definitions
      At line 8 in file lab1-matmul.s
   Uses
      At line 14 in file lab1-matmul.s
Comment: ARR_R used once
globals 00000000

Symbol: globals
   Definitions
      At line 6 in file lab1-matmul.s
   Uses
      None
Comment: globals unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ARR_A 0000009C

Symbol: ARR_A
   Definitions
      At line 76 in file lab1-matmul.s
   Uses
      At line 12 in file lab1-matmul.s
Comment: ARR_A used once
ARR_B 000000DC

Symbol: ARR_B
   Definitions
      At line 80 in file lab1-matmul.s
   Uses
      At line 13 in file lab1-matmul.s
Comment: ARR_B used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 10 in file lab1-matmul.s
   Uses
      None
Comment: RESET unused
STOP 00000098

Symbol: STOP
   Definitions
      At line 74 in file lab1-matmul.s
   Uses
      At line 74 in file lab1-matmul.s
Comment: STOP used once
fLoop1End 00000098

Symbol: fLoop1End
   Definitions
      At line 72 in file lab1-matmul.s
   Uses
      At line 24 in file lab1-matmul.s
Comment: fLoop1End used once
fLoop1Start 00000024

Symbol: fLoop1Start
   Definitions
      At line 22 in file lab1-matmul.s
   Uses
      At line 71 in file lab1-matmul.s
Comment: fLoop1Start used once
fLoop2End 0000008C

Symbol: fLoop2End
   Definitions
      At line 66 in file lab1-matmul.s
   Uses
      At line 28 in file lab1-matmul.s
Comment: fLoop2End used once
fLoop2Start 0000002C

Symbol: fLoop2Start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 26 in file lab1-matmul.s
   Uses
      At line 64 in file lab1-matmul.s
Comment: fLoop2Start used once
fLoop3End 00000070

Symbol: fLoop3End
   Definitions
      At line 55 in file lab1-matmul.s
   Uses
      At line 33 in file lab1-matmul.s
Comment: fLoop3End used once
fLoop3Start 00000038

Symbol: fLoop3Start
   Definitions
      At line 31 in file lab1-matmul.s
   Uses
      At line 53 in file lab1-matmul.s
Comment: fLoop3Start used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000004

Symbol: N
   Definitions
      At line 5 in file lab1-matmul.s
   Uses
      At line 8 in file lab1-matmul.s
      At line 8 in file lab1-matmul.s
      At line 15 in file lab1-matmul.s

1 symbol
347 symbols in table
