


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 3 - Floating-Point Addition
    4 00000000         ;
    5 00000000         
    6 00000000                 AREA             RESET, CODE, READONLY
    7 00000000                 ENTRY
    8 00000000         
    9 00000000         ;
   10 00000000         ; Test Data
   11 00000000         ;
   12 00000000 41C40000 
                       FP_A    EQU              0x41C40000
   13 00000000 41960000 
                       FP_B    EQU              0x41960000
   14 00000000         
   15 00000000         
   16 00000000         ; initialize system stack pointer (SP)
   17 00000000 E59FD108        LDR              SP, =0x40010000
   18 00000004         
   19 00000004         ; encode test
   20 00000004 E3A00731        LDR              R0,=0x00C40000
   21 00000008 E3A01004        MOV              R1,#4
   22 0000000C EB000018        BL               fpencode
   23 00000010         
   24 00000010         ; decode test
   25 00000010 E59F00FC        LDR              R0, =FP_A   ; test value A
   26 00000014 EB000003        BL               fpdecode
   27 00000018         
   28 00000018         ; add test
   29 00000018 E59F00F4        LDR              R0, =FP_A
   30 0000001C E59F10F4        LDR              r1, =FP_B   ; test value B
   31 00000020 EB000019        BL               fpadd
   32 00000024         
   33 00000024         
   34 00000024 EAFFFFFE 
                       stop    B                stop
   35 00000028         
   36 00000028         
   37 00000028         ;
   38 00000028         ; fpdecode
   39 00000028         ; decodes an IEEE 754 floating point value to the signed
                        (2's complement)
   40 00000028         ; fraction and a signed 2's complement (unbiased) expone
                       nt
   41 00000028         ; parameters:
   42 00000028         ; r0 - ieee 754 float
   43 00000028         ; return:
   44 00000028         ; r0 - fraction (signed 2's complement word)
   45 00000028         ; r1 - exponent (signed 2's complement word)
   46 00000028         ;
   47 00000028         fpdecode
   48 00000028 E92D4030        PUSH             {R4-R5,LR}
   49 0000002C         
   50 0000002C E3A05000 
                       dpdecode1
                               MOV              R5,#0
   51 00000030 E1B00080        MOVS             R0,R0,LSL#1 ;get the sign
   52 00000034 E2A55000        ADC              R5,R5,#0



ARM Macro Assembler    Page 2 


   53 00000038 E1A03000        MOV              R3,R0       ; creates a copy in
                                                             R3
   54 0000003C E3A040FF        MOV              R4,#0xFF
   55 00000040 E1A04C04        MOV              R4,R4,LSL#24
   56 00000044 E0002004        AND              R2,R0,R4    ; extract the expon
                                                            ent part
   57 00000048 E1A02C22        MOV              R2,R2,LSR#24 ; get base value
   58 0000004C E242107F        SUB              R1,R2,#127  ; extract exponent
   59 00000050 E1C30004        BIC              R0,R3,R4    ; clears the expone
                                                            nt part
   60 00000054 E1A000A0        MOV              R0,R0,LSR#1 ; remove the extra 
                                                            MSBit 0
   61 00000058 E3800502        ORR              R0,R0,#0x00800000 ; set the LSB
                                                             to one to reflect 
                                                            hidden 1
   62 0000005C E3550000        CMP              R5,#0       ; if negative   
   63 00000060 0A000002        BEQ              fpdecodeE
   64 00000064 E3E03000        LDR              R3,=0xFFFFFFFF
   65 00000068 E0200003        EOR              R0,R0,R3    ; invert the bits
   66 0000006C E2800001        ADD              R0,R0,#1    ; add one
   67 00000070         
   68 00000070 E8BD8030 
                       fpdecodeE
                               POP              {R4-R5,PC}
   69 00000074         
   70 00000074         
   71 00000074         ;
   72 00000074         ; fpencode
   73 00000074         ; encodes an IEEE 754 value using a specified fraction a
                       nd exponent
   74 00000074         ; parameters:
   75 00000074         ; r0 - fraction (signed 2's complement word)
   76 00000074         ; r1 - exponent (signed 2's complement word)
   77 00000074         ; result:
   78 00000074         ; r0 - ieee 754 float
   79 00000074         ;
   80 00000074         fpencode
   81 00000074 E92D4010        PUSH{R4,LR}
   82 00000078 E3C00502        AND              R0, #0xFF7FFFFF 
                                                            ;remove hidden 1
   83 0000007C E281107F        ADD              R1, R1, #127 ;add 127 to exp
   84 00000080         ;MOV R3, R1   ;store backup exp
   85 00000080         
   86 00000080         ;forStart2
   87 00000080         ;MOVS R3,R3, LSL#1  ;Move left until exp brought to left
                        of reg.
   88 00000080         ;ADC R2, R2, #0
   89 00000080         ;CMP R2, #1
   90 00000080         ;BEQ forEnd2
   91 00000080         ;ADD R4, R4, #1  ;inc counter
   92 00000080         ;B forStart2
   93 00000080         
   94 00000080         ;forEnd2
   95 00000080         ;SUB R4, R4, #2  ;to reduce counter by one to regain los
                       t 1 that triggered ADC, then reduce by one to fill to 31
                        bits
   96 00000080 E1A01B81        MOV              R1,R1,LSL#23 ; shift exponent k
                                                            ey to place
   97 00000084         ;MOV R1,R1, LSL R4  ;R1 - exp. ready to be loaded into e



ARM Macro Assembler    Page 3 


                       ncoded reg.
   98 00000084 E1800001        ORR              R0,R0,R1    ; combine exponent 
                                                            with fraction
   99 00000088 E8BD8010        POP{R4,PC}
  100 0000008C         
  101 0000008C         ;
  102 0000008C         ; fpadd
  103 0000008C         ; adds two IEEE 754 values
  104 0000008C         ; parameters:
  105 0000008C         ; r0 - ieee 754 float A
  106 0000008C         ; r1 - ieee 754 float B
  107 0000008C         ; return:
  108 0000008C         ; r0 - ieee 754 float A+B
  109 0000008C         ;
  110 0000008C         fpadd
  111 0000008C E92D4070        PUSH{R4-R6,LR}
  112 00000090 E1A09001        MOV              R9,R1       ; creates a copy of
                                                             float B
  113 00000094         decode
  114 00000094 EBFFFFE3        BL               fpdecode
  115 00000098 E1A05000        MOV              R5,R0       ; fraction a
  116 0000009C E1A06001        MOV              R6,R1       ; exponent a
  117 000000A0 E1A00009        MOV              R0,R9       ; decode b
  118 000000A4 EBFFFFDF        BL               fpdecode
  119 000000A8 E1A07000        MOV              R7,R0       ; fraction b
  120 000000AC E1A08001        MOV              R8,R1       ; exponent b
  121 000000B0         
  122 000000B0 E1560008 
                       expCMP  CMP              R6,R8       ; if a<b
  123 000000B4 BA000008        BLT              aSb
  124 000000B8 E1560008        CMP              R6,R8       ; if a>b
  125 000000BC CA00000B        BGT              aBb
  126 000000C0         
  127 000000C0 E0850007 
                       addFrac ADD              R0,R5,R7    ; add both fraction
                                                            s
  128 000000C4 E2002401        AND              R2,R0,#0x01000000
  129 000000C8 E3520000        CMP              R2,#0       ; if exceeded 24bit
                                                            s boundary
  130 000000CC 0A00000C        BEQ              encode1
  131 000000D0 E2866001        ADD              R6,#1       ; adds the exponent
                                                            
  132 000000D4 E1A000A0        MOV              R0,R0,LSR#1 ; moves the larger 
                                                            bit into fraction
  133 000000D8 EA000009        B                encode1
  134 000000DC         
  135 000000DC E1560008 
                       aSb     CMP              R6,R8       ; if a<b
  136 000000E0 AAFFFFF6        BGE              addFrac
  137 000000E4 E2866001        ADD              R6,R6,#1    ; adds exponent of 
                                                            a
  138 000000E8 E1A050A5        MOV              R5,R5,LSR#1 ; moves a fraction 
                                                            one place to left
  139 000000EC EAFFFFFA        B                aSb
  140 000000F0         
  141 000000F0 E1560008 
                       aBb     CMP              R6,R8       ; if a>b
  142 000000F4 DAFFFFF1        BLE              addFrac
  143 000000F8 E2888001        ADD              R8,R8,#1    ; adds exponent of 



ARM Macro Assembler    Page 4 


                                                            b
  144 000000FC E1A070A7        MOV              R7,R7,LSR#1 ; moves b fraction 
                                                            one place to left
  145 00000100 EAFFFFFA        B                aBb
  146 00000104         
  147 00000104 E1A01006 
                       encode1 MOV              R1,R6
  148 00000108 EBFFFFD9        BL               fpencode
  149 0000010C E8BD8070        POP              {R4-R6,PC}
  150 00000110         
  151 00000110         
  152 00000110                 END
              40010000 
              41C40000 
              41960000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab3-fpadd.d -o.\objects\lab3-fpadd.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Kei
l_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 516" --list=.\listings\lab3-fpadd.lst lab3
-fpadd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 6 in file lab3-fpadd.s
   Uses
      None
Comment: RESET unused
aBb 000000F0

Symbol: aBb
   Definitions
      At line 141 in file lab3-fpadd.s
   Uses
      At line 125 in file lab3-fpadd.s
      At line 145 in file lab3-fpadd.s

aSb 000000DC

Symbol: aSb
   Definitions
      At line 135 in file lab3-fpadd.s
   Uses
      At line 123 in file lab3-fpadd.s
      At line 139 in file lab3-fpadd.s

addFrac 000000C0

Symbol: addFrac
   Definitions
      At line 127 in file lab3-fpadd.s
   Uses
      At line 136 in file lab3-fpadd.s
      At line 142 in file lab3-fpadd.s

decode 00000094

Symbol: decode
   Definitions
      At line 113 in file lab3-fpadd.s
   Uses
      None
Comment: decode unused
dpdecode1 0000002C

Symbol: dpdecode1
   Definitions
      At line 50 in file lab3-fpadd.s
   Uses
      None
Comment: dpdecode1 unused
encode1 00000104

Symbol: encode1
   Definitions
      At line 147 in file lab3-fpadd.s
   Uses
      At line 130 in file lab3-fpadd.s
      At line 133 in file lab3-fpadd.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


expCMP 000000B0

Symbol: expCMP
   Definitions
      At line 122 in file lab3-fpadd.s
   Uses
      None
Comment: expCMP unused
fpadd 0000008C

Symbol: fpadd
   Definitions
      At line 110 in file lab3-fpadd.s
   Uses
      At line 31 in file lab3-fpadd.s
Comment: fpadd used once
fpdecode 00000028

Symbol: fpdecode
   Definitions
      At line 47 in file lab3-fpadd.s
   Uses
      At line 26 in file lab3-fpadd.s
      At line 114 in file lab3-fpadd.s
      At line 118 in file lab3-fpadd.s

fpdecodeE 00000070

Symbol: fpdecodeE
   Definitions
      At line 68 in file lab3-fpadd.s
   Uses
      At line 63 in file lab3-fpadd.s
Comment: fpdecodeE used once
fpencode 00000074

Symbol: fpencode
   Definitions
      At line 80 in file lab3-fpadd.s
   Uses
      At line 22 in file lab3-fpadd.s
      At line 148 in file lab3-fpadd.s

stop 00000024

Symbol: stop
   Definitions
      At line 34 in file lab3-fpadd.s
   Uses
      At line 34 in file lab3-fpadd.s
Comment: stop used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FP_A 41C40000

Symbol: FP_A
   Definitions
      At line 12 in file lab3-fpadd.s
   Uses
      At line 25 in file lab3-fpadd.s
      At line 29 in file lab3-fpadd.s

FP_B 41960000

Symbol: FP_B
   Definitions
      At line 13 in file lab3-fpadd.s
   Uses
      At line 30 in file lab3-fpadd.s
Comment: FP_B used once
2 symbols
349 symbols in table
