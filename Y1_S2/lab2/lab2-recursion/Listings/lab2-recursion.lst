


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1022 Introduction to Computing II 2018/2019
    3 00000000         ; Lab 2 - Recursion
    4 00000000         ;
    5 00000000         
    6 00000000 0000000A 
                       N       EQU              10
    7 00000000         
    8 00000000                 AREA             globals, DATA, READWRITE
    9 00000000         
   10 00000000         ; N word-size values
   11 00000000         
   12 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       SORTED  SPACE            N*4         ; N words (4 bytes 
                                                            each)
   13 00000028         
   14 00000028         
   15 00000028                 AREA             RESET, CODE, READONLY
   16 00000000                 ENTRY
   17 00000000         
   18 00000000         ;
   19 00000000         ; copy the test data into RAM
   20 00000000         ;
   21 00000000         
   22 00000000 E59F40CC        LDR              R4, =SORTED
   23 00000004 E59F50CC        LDR              R5, =UNSORT
   24 00000008 E3A06000        LDR              R6, =0
   25 0000000C E356000A 
                       whInit  CMP              R6, #N
   26 00000010 2A000003        BHS              eWhInit
   27 00000014 E7957106        LDR              R7, [R5, R6, LSL #2]
   28 00000018 E7847106        STR              R7, [R4, R6, LSL #2]
   29 0000001C E2866001        ADD              R6, R6, #1
   30 00000020 EAFFFFF9        B                whInit
   31 00000024         eWhInit
   32 00000024         
   33 00000024         
   34 00000024         ;LDR R0,=UNSORT ; R0=ARR
   35 00000024         ;MOV R1,#2   ; i=2
   36 00000024         ;MOV R2,#5   ; j=5
   37 00000024         ;BL swap   ; calls subroutine swap
   38 00000024         
   39 00000024         
   40 00000024         
   41 00000024         
   42 00000024 E59F00A8        LDR              R0,=SORTED
   43 00000028 E3A0100A        MOV              R1,#N



ARM Macro Assembler    Page 2 


   44 0000002C EB000008        BL               sort
   45 00000030         
   46 00000030 EAFFFFFE 
                       STOP    B                STOP
   47 00000034         
   48 00000034         
   49 00000034         ;Q2a
   50 00000034         
   51 00000034         ;swap(array, i, j)
   52 00000034         ;
   53 00000034         ;
   54 00000034         ; swap
   55 00000034         ; swaps two element of a 1*1 dimension array
   56 00000034         ; Parameters
   57 00000034         ; R0 - array
   58 00000034         ; R1 - first element index
   59 00000034         ; R2 - second element index
   60 00000034         
   61 00000034 E92D4030 
                       swap    PUSH{R4-R5,LR}
   62 00000038 E1A04001        MOV              R4,R1       ; first element ind
                                                            ex
   63 0000003C E1A05002        MOV              R5,R2       ; second element in
                                                            dex
   64 00000040         
   65 00000040 E7901104        LDR              R1,[R0,R4, LSL#2] 
                                                            ; element address 1
                                                            
   66 00000044 E7902105        LDR              R2,[R0,R5, LSL#2] 
                                                            ; element address 2
                                                            
   67 00000048         
   68 00000048 E7801105        STR              R1,[R0,R5, LSL#2]
   69 0000004C E7802104        STR              R2,[R0,R4, LSL#2]
   70 00000050 E8BD8030        POP              {R4-R5,PC}
   71 00000054         
   72 00000054         ;sort
   73 00000054         ; bubble sort an array of numbers
   74 00000054         ; Parameters
   75 00000054         ; R0 - array
   76 00000054         ; R1 - number of elements
   77 00000054         
   78 00000054 E92D43F0 
                       sort    PUSH{R4-R9,LR}
   79 00000058 E1A06001        MOV              R6,R1       ;
   80 0000005C E1A0A000        MOV              R10,R0
   81 00000060         
   82 00000060 E3A04001 
                       fLoop1Start
                               MOV              R4, #1      ; i = 1
   83 00000064         
   84 00000064 E3A07000        MOV              R7,#0       ; SWAPPED = false
   85 00000068         
   86 00000068         
   87 00000068 E1540006 
                       fLoop   CMP              R4, R6      ; while (i<N)
   88 0000006C AA00000A        BGE              fLoop1End
   89 00000070 E2445001        SUB              R5, R4,#1   ; i - 1
   90 00000074         



ARM Macro Assembler    Page 3 


   91 00000074 E7908104 
                       ifStat  LDR              R8,[R0,R4,LSL#2] ; ARR[I]
   92 00000078 E7909105        LDR              R9,[R0,R5,LSL#2] ; ARR[i-1]
   93 0000007C E1590008        CMP              R9 , R8     ;if(ARR[i-1]>ARR[i]
                                                            )
   94 00000080 DA000003        BLE              ifEnd
   95 00000084 E1A01005        MOV              R1,R5       ; i-1
   96 00000088 E1A02004        MOV              R2,R4       ; i
   97 0000008C EBFFFFE8        BL               swap        ; calls subroutine 
                                                            swap
   98 00000090 E2877001        ADD              R7,R7,#1    ; SWAPPED = true
   99 00000094         
  100 00000094 E2844001 
                       ifEnd   ADD              R4,R4,#1    ;i++  
  101 00000098         
  102 00000098 EAFFFFF2        B                fLoop
  103 0000009C         
  104 0000009C E3570001 
                       fLoop1End
                               CMP              R7,#1
  105 000000A0 3A000000        BLO              doWhileEnd
  106 000000A4 EAFFFFED        B                fLoop1Start
  107 000000A8         
  108 000000A8 E8BD83F0 
                       doWhileEnd
                               POP              {R4-R9,PC}
  109 000000AC         
  110 000000AC         
  111 000000AC 00000009 
              00000003 
              00000000 
              00000001 
              00000006 
              00000002 
              00000004 
              00000007 
              00000008 
              00000005 UNSORT  DCD              9,3,0,1,6,2,4,7,8,5
  112 000000D4         
  113 000000D4                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab2-recursion.d -o.\objects\lab2-recursion.o -IC:\Keil_v5\ARM\RV31\INC 
-IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\lab2-recurs
ion.lst lab2-recursion.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SORTED 00000000

Symbol: SORTED
   Definitions
      At line 12 in file lab2-recursion.s
   Uses
      At line 22 in file lab2-recursion.s
      At line 42 in file lab2-recursion.s

globals 00000000

Symbol: globals
   Definitions
      At line 8 in file lab2-recursion.s
   Uses
      None
Comment: globals unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 15 in file lab2-recursion.s
   Uses
      None
Comment: RESET unused
STOP 00000030

Symbol: STOP
   Definitions
      At line 46 in file lab2-recursion.s
   Uses
      At line 46 in file lab2-recursion.s
Comment: STOP used once
UNSORT 000000AC

Symbol: UNSORT
   Definitions
      At line 111 in file lab2-recursion.s
   Uses
      At line 23 in file lab2-recursion.s
Comment: UNSORT used once
doWhileEnd 000000A8

Symbol: doWhileEnd
   Definitions
      At line 108 in file lab2-recursion.s
   Uses
      At line 105 in file lab2-recursion.s
Comment: doWhileEnd used once
eWhInit 00000024

Symbol: eWhInit
   Definitions
      At line 31 in file lab2-recursion.s
   Uses
      At line 26 in file lab2-recursion.s
Comment: eWhInit used once
fLoop 00000068

Symbol: fLoop
   Definitions
      At line 87 in file lab2-recursion.s
   Uses
      At line 102 in file lab2-recursion.s
Comment: fLoop used once
fLoop1End 0000009C

Symbol: fLoop1End
   Definitions
      At line 104 in file lab2-recursion.s
   Uses
      At line 88 in file lab2-recursion.s
Comment: fLoop1End used once
fLoop1Start 00000060

Symbol: fLoop1Start



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 82 in file lab2-recursion.s
   Uses
      At line 106 in file lab2-recursion.s
Comment: fLoop1Start used once
ifEnd 00000094

Symbol: ifEnd
   Definitions
      At line 100 in file lab2-recursion.s
   Uses
      At line 94 in file lab2-recursion.s
Comment: ifEnd used once
ifStat 00000074

Symbol: ifStat
   Definitions
      At line 91 in file lab2-recursion.s
   Uses
      None
Comment: ifStat unused
sort 00000054

Symbol: sort
   Definitions
      At line 78 in file lab2-recursion.s
   Uses
      At line 44 in file lab2-recursion.s
Comment: sort used once
swap 00000034

Symbol: swap
   Definitions
      At line 61 in file lab2-recursion.s
   Uses
      At line 97 in file lab2-recursion.s
Comment: swap used once
whInit 0000000C

Symbol: whInit
   Definitions
      At line 25 in file lab2-recursion.s
   Uses
      At line 30 in file lab2-recursion.s
Comment: whInit used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 0000000A

Symbol: N
   Definitions
      At line 6 in file lab2-recursion.s
   Uses
      At line 12 in file lab2-recursion.s
      At line 25 in file lab2-recursion.s
      At line 43 in file lab2-recursion.s

1 symbol
350 symbols in table
