


ARM Macro Assembler    Page 1 


    1 00000000         ;
    2 00000000         ; CS1021 2018/2019 Lab 5
    3 00000000         ;
    4 00000000         ; RAM @ 0x4000000 sz = 0x10000 (64K)
    5 00000000         ;
    6 00000000         
    7 00000000         ;
    8 00000000         ; hardware registers
    9 00000000         ;
   10 00000000         
   11 00000000 E002C000 
                       PINSEL0 EQU              0xE002C000
   12 00000000         
   13 00000000 E000C000 
                       U0RBR   EQU              0xE000C000
   14 00000000 E000C000 
                       U0THR   EQU              0xE000C000
   15 00000000 E000C00C 
                       U0LCR   EQU              0xE000C00C
   16 00000000 E000C014 
                       U0LSR   EQU              0xE000C014
   17 00000000         
   18 00000000         
   19 00000000                 AREA             RESET, CODE, READONLY
   20 00000000                 ENTRY
   21 00000000         
   22 00000000         ; 
   23 00000000         ; hardware initialisation
   24 00000000         ;
   25 00000000         
   26 00000000         
   27 00000000 E59FD198        LDR              R13, =0x40010000 ; initialse SP
                                                            
   28 00000004 E59F0198        LDR              R0, =PINSEL0 ; enable UART0 TxD
                                                             and RxD signals
   29 00000008 E3A01050        MOV              R1, #0x50   ;
   30 0000000C E5C01000        STRB             R1, [R0]    ;
   31 00000010 E59F0190        LDR              R0, =U0LCR  ; R0 - > U0LCR (lin
                                                            e control register)
                                                            
   32 00000014 E3A01002        LDR              R1, =0x02   ; 7 data bits + par
                                                            ity
   33 00000018 E5C01000        STRB             R1, [R0]    ;
   34 0000001C         
   35 0000001C         
   36 0000001C         ;
   37 0000001C         ; My code
   38 0000001C         ;
   39 0000001C         
   40 0000001C         
   41 0000001C E59F0188 
                       INIR0   LDR              R0, =STR0   ; R0 -> "Input stri
                                                            ng"
   42 00000020 EB00004F        BL               PUTS        ; put string
   43 00000024 E3A04101        LDR              R4,=0x40000000 
                                                            ; Starting address
   44 00000028 E3A0C000        MOV              R12,#0      ; NO.CHAR(inc. cr) 
                                                            = 0
   45 0000002C         



ARM Macro Assembler    Page 2 


   46 0000002C EB00003A 
                       INR0    BL               GET         ; get character
   47 00000030 EB000040        BL               PUT         ; put character
   48 00000034 E28CC001        ADD              R12,R12,#1  ; ++NO.CHAR(inc. cr
                                                            )
   49 00000038 E5C40000        STRB             R0,[R4]     ;
   50 0000003C E2844001        ADD              R4,R4,#1    ; ++R4
   51 00000040 E350000D        CMP              R0,#0x0D    ; if (R0 != cr)
   52 00000044 1AFFFFF8        BNE              INR0
   53 00000048         
   54 00000048 E59F0160        LDR              R0, =STR3   ; empty line
   55 0000004C EB000044        BL               PUTS
   56 00000050 E59F515C 
                       INIR1   LDR              R5,=0x40000200 ;S1 starting add
                                                            ress
   57 00000054         
   58 00000054 EB000030 
                       INR1    BL               GET         ; get character
   59 00000058 EB000036        BL               PUT         ; put character
   60 0000005C E5C50000        STRB             R0,[R5]     ;
   61 00000060 E2855001        ADD              R5,R5,#1    ; ++R5
   62 00000064 E350000D        CMP              R0,#0x0D    ; if (R0 != cr)
   63 00000068 1AFFFFF9        BNE              INR1
   64 0000006C         
   65 0000006C E59F6144 
                       COPYR0  LDR              R6,=0x40000400 
                                                            ; S0 copy address
   66 00000070 E3A04101        LDR              R4,=0x40000000 ; R4 = starting 
                                                            address
   67 00000074 E084700C        ADD              R7,R4,R12   ; R7 = ending addre
                                                            ss
   68 00000078 E1540007 
                       COPYR0L CMP              R4,R7       ; if (finish copyin
                                                            g S0) 
   69 0000007C 0A000004        BEQ              INICOMPARE
   70 00000080 E5D48000        LDRB             R8,[R4]     ; 
   71 00000084 E2844001        ADD              R4,R4,#1    ;
   72 00000088 E5C68000        STRB             R8,[R6]     ;S0 copied to R6
   73 0000008C E2866001        ADD              R6,R6,#1    ;++R6
   74 00000090 EAFFFFF8        B                COPYR0L
   75 00000094         
   76 00000094 E59F611C 
                       INICOMPARE
                               LDR              R6,=0x40000400 ; S0 copy starti
                                                            ng address
   77 00000098 E59F5114        LDR              R5,=0x40000200 ; S1 starting ad
                                                            dress 
   78 0000009C         
   79 0000009C E5D50000        LDRB             R0,[R5]     ; R0 loads S1
   80 000000A0 E5D68000 
                       COMPAREL
                               LDRB             R8,[R6]     ; R8 loads S0
   81 000000A4 E350000D        CMP              R0,#0x0D    ; if (R0) = cr
   82 000000A8 0A00000C        BEQ              YES         ; finished 
   83 000000AC E358000D        CMP              R8,#0x0D    ; if (R8) = cr 
   84 000000B0 0A00000C        BEQ              NO          ; finished
   85 000000B4 E1500008        CMP              R0,R8       ; if (S0 contains S
                                                            1's char)
   86 000000B8 0A000002        BEQ              NEXTC



ARM Macro Assembler    Page 3 


   87 000000BC E2866001        ADD              R6,R6,#1    ; next S0 char
   88 000000C0 E5D68000        LDRB             R8,[R6]
   89 000000C4 EAFFFFF5        B                COMPAREL
   90 000000C8         
   91 000000C8 E3A08000 
                       NEXTC   MOV              R8,#0       ; replace the ident
                                                            ical char with 0
   92 000000CC E5C68000        STRB             R8,[R6]     ; stores the replac
                                                            ed char into memory
                                                              
   93 000000D0 E2855001        ADD              R5,R5,#1    ; proceed to the ne
                                                            xt char of S1
   94 000000D4 E5D50000        LDRB             R0,[R5]     ; loads next S1 cha
                                                            r into R0
   95 000000D8 E59F60D8        LDR              R6,=0x40000400 ; S0 copy starti
                                                            ng address
   96 000000DC EAFFFFEF        B                COMPAREL
   97 000000E0         
   98 000000E0 E59F00D4 
                       YES     LDR              R0, =STR1   ; loads "Y" into R0
                                                            
   99 000000E4 EA000000        B                PRINT
  100 000000E8         
  101 000000E8 E59F00D0 
                       NO      LDR              R0, =STR2   ; loads "N" into R0
                                                            
  102 000000EC         
  103 000000EC EB00001C 
                       PRINT   BL               PUTS
  104 000000F0 E59F00B8        LDR              R0, =STR3
  105 000000F4 EB00001A        BL               PUTS
  106 000000F8         
  107 000000F8 EB000007 
                       ISR1EMPTY
                               BL               GET         ; get character
  108 000000FC EB00000D        BL               PUT         ; out character
  109 00000100 E59F50AC        LDR              R5,=0x40000200 ; S1 starting ad
                                                            dress
  110 00000104 E5C50000        STRB             R0,[R5]     ; store char into R
                                                            5
  111 00000108 E2855001        ADD              R5,R5,#1    ; ++R5
  112 0000010C E350000D        CMP              R0,#0x0D    ; if (next R0 == 0)
                                                            
  113 00000110 0AFFFFC1        BEQ              INIR0       ; overwrites S0
  114 00000114 EAFFFFCE        B                INR1        ; overwrites S1
  115 00000118 EAFFFFFE 
                       L       B                L           ; forever
  116 0000011C         
  117 0000011C         
  118 0000011C         
  119 0000011C         ;
  120 0000011C         ; subroutines
  121 0000011C         ; 
  122 0000011C         ; GET
  123 0000011C         ;
  124 0000011C         ; leaf function which returns ASCII character typed in U
                       ART #1 window in R0
  125 0000011C         ;
  126 0000011C         



ARM Macro Assembler    Page 4 


  127 0000011C         ;GETS PUSH {LR}
  128 0000011C         
  129 0000011C         
  130 0000011C         ;POP {PC}
  131 0000011C         
  132 0000011C E59F10A4 
                       GET     LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
  133 00000120 E5910000 
                       GET0    LDR              R0, [R1]    ; wait until
  134 00000124 E2100001        ANDS             R0, #0x01   ; receiver data
  135 00000128 0AFFFFFC        BEQ              GET0        ; ready
  136 0000012C E59F1098        LDR              R1, =U0RBR  ; R1 -> U0RBR (Rece
                                                            iver Buffer Registe
                                                            r)
  137 00000130 E5D10000        LDRB             R0, [R1]    ; get received data
                                                            
  138 00000134 E12FFF1E        BX               LR          ; return
  139 00000138         
  140 00000138         ; 
  141 00000138         ; PUT
  142 00000138         ;
  143 00000138         ; leaf function which sends ASCII character in R0 to UAR
                       T #1 window
  144 00000138         ;
  145 00000138 E59F1088 
                       PUT     LDR              R1, =U0LSR  ; R1 -> U0LSR (Line
                                                             Status Register)
  146 0000013C E5D11000        LDRB             R1, [R1]    ; wait until transm
                                                            it
  147 00000140 E2111020        ANDS             R1, R1, #0x20 
                                                            ; holding register
  148 00000144 0AFFFFFB        BEQ              PUT         ; empty
  149 00000148 E59F107C        LDR              R1, =U0THR  ; R1 -> U0THR
  150 0000014C E5C10000        STRB             R0, [R1]    ; output charcter
  151 00000150 E59F1070 
                       PUT0    LDR              R1, =U0LSR  ; R1 -> U0LSR
  152 00000154 E5D11000        LDRB             R1, [R1]    ; wait until 
  153 00000158 E2111040        ANDS             R1, R1, #0x40 ; transmitter
  154 0000015C 0AFFFFFB        BEQ              PUT0        ; empty (data flush
                                                            ed)
  155 00000160 E12FFF1E        BX               LR          ; return
  156 00000164         
  157 00000164         ; 
  158 00000164         ; PUTS
  159 00000164         ;
  160 00000164         ; sends NUL terminated ASCII string (address in R0) to U
                       ART #1 window
  161 00000164         ;
  162 00000164 E92D4010 
                       PUTS    PUSH             {R4, LR}    ; push R4 and LR
  163 00000168 E1A04000        MOV              R4, R0      ; copy R0
  164 0000016C E4D40001 
                       PUTS0   LDRB             R0, [R4], #1 ; get character + 
                                                            increment R4
  165 00000170 E3500000        CMP              R0, #0      ; 0?
  166 00000174 0A000001        BEQ              PUTS1       ; return
  167 00000178 EBFFFFEE        BL               PUT         ; put character
  168 0000017C EAFFFFFA        B                PUTS0       ; next character



ARM Macro Assembler    Page 5 


  169 00000180 E8BD8010 
                       PUTS1   POP              {R4, PC}    ; pop R4 and PC
  170 00000184         
  171 00000184         
  172 00000184 49 6E 70 
              75 74 20 
              79 6F 75 
              72 20 73 
              74 72 69 
              6E 67 0A 
              00       STR0    DCB              "Input your string", 0x0a, 0
  173 00000197 0A 59 00 
                       STR1    DCB              0x0a,"Y",0
  174 0000019A 0A 4E 00 
                       STR2    DCB              0x0a,"N",0
  175 0000019D 0A 00 00 
                       STR3    DCB              "",0x0a,0,0
  176 000001A0         
  177 000001A0                 END
              40010000 
              E002C000 
              E000C00C 
              00000000 
              00000000 
              40000200 
              40000400 
              00000000 
              00000000 
              00000000 
              E000C014 
              E000C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab5.d -o.\objects\lab5.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 516" --list=.\listings\lab5.lst lab5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

COMPAREL 000000A0

Symbol: COMPAREL
   Definitions
      At line 80 in file lab5.s
   Uses
      At line 89 in file lab5.s
      At line 96 in file lab5.s

COPYR0 0000006C

Symbol: COPYR0
   Definitions
      At line 65 in file lab5.s
   Uses
      None
Comment: COPYR0 unused
COPYR0L 00000078

Symbol: COPYR0L
   Definitions
      At line 68 in file lab5.s
   Uses
      At line 74 in file lab5.s
Comment: COPYR0L used once
GET 0000011C

Symbol: GET
   Definitions
      At line 132 in file lab5.s
   Uses
      At line 46 in file lab5.s
      At line 58 in file lab5.s
      At line 107 in file lab5.s

GET0 00000120

Symbol: GET0
   Definitions
      At line 133 in file lab5.s
   Uses
      At line 135 in file lab5.s
Comment: GET0 used once
INICOMPARE 00000094

Symbol: INICOMPARE
   Definitions
      At line 76 in file lab5.s
   Uses
      At line 69 in file lab5.s
Comment: INICOMPARE used once
INIR0 0000001C

Symbol: INIR0
   Definitions
      At line 41 in file lab5.s
   Uses
      At line 113 in file lab5.s
Comment: INIR0 used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

INIR1 00000050

Symbol: INIR1
   Definitions
      At line 56 in file lab5.s
   Uses
      None
Comment: INIR1 unused
INR0 0000002C

Symbol: INR0
   Definitions
      At line 46 in file lab5.s
   Uses
      At line 52 in file lab5.s
Comment: INR0 used once
INR1 00000054

Symbol: INR1
   Definitions
      At line 58 in file lab5.s
   Uses
      At line 63 in file lab5.s
      At line 114 in file lab5.s

ISR1EMPTY 000000F8

Symbol: ISR1EMPTY
   Definitions
      At line 107 in file lab5.s
   Uses
      None
Comment: ISR1EMPTY unused
L 00000118

Symbol: L
   Definitions
      At line 115 in file lab5.s
   Uses
      At line 115 in file lab5.s
Comment: L used once
NEXTC 000000C8

Symbol: NEXTC
   Definitions
      At line 91 in file lab5.s
   Uses
      At line 86 in file lab5.s
Comment: NEXTC used once
NO 000000E8

Symbol: NO
   Definitions
      At line 101 in file lab5.s
   Uses
      At line 84 in file lab5.s
Comment: NO used once
PRINT 000000EC




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: PRINT
   Definitions
      At line 103 in file lab5.s
   Uses
      At line 99 in file lab5.s
Comment: PRINT used once
PUT 00000138

Symbol: PUT
   Definitions
      At line 145 in file lab5.s
   Uses
      At line 47 in file lab5.s
      At line 59 in file lab5.s
      At line 108 in file lab5.s
      At line 148 in file lab5.s
      At line 167 in file lab5.s

PUT0 00000150

Symbol: PUT0
   Definitions
      At line 151 in file lab5.s
   Uses
      At line 154 in file lab5.s
Comment: PUT0 used once
PUTS 00000164

Symbol: PUTS
   Definitions
      At line 162 in file lab5.s
   Uses
      At line 42 in file lab5.s
      At line 55 in file lab5.s
      At line 103 in file lab5.s
      At line 105 in file lab5.s

PUTS0 0000016C

Symbol: PUTS0
   Definitions
      At line 164 in file lab5.s
   Uses
      At line 168 in file lab5.s
Comment: PUTS0 used once
PUTS1 00000180

Symbol: PUTS1
   Definitions
      At line 169 in file lab5.s
   Uses
      At line 166 in file lab5.s
Comment: PUTS1 used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 19 in file lab5.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: RESET unused
STR0 00000184

Symbol: STR0
   Definitions
      At line 172 in file lab5.s
   Uses
      At line 41 in file lab5.s
Comment: STR0 used once
STR1 00000197

Symbol: STR1
   Definitions
      At line 173 in file lab5.s
   Uses
      At line 98 in file lab5.s
Comment: STR1 used once
STR2 0000019A

Symbol: STR2
   Definitions
      At line 174 in file lab5.s
   Uses
      At line 101 in file lab5.s
Comment: STR2 used once
STR3 0000019D

Symbol: STR3
   Definitions
      At line 175 in file lab5.s
   Uses
      At line 54 in file lab5.s
      At line 104 in file lab5.s

YES 000000E0

Symbol: YES
   Definitions
      At line 98 in file lab5.s
   Uses
      At line 82 in file lab5.s
Comment: YES used once
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 11 in file lab5.s
   Uses
      At line 28 in file lab5.s
Comment: PINSEL0 used once
U0LCR E000C00C

Symbol: U0LCR
   Definitions
      At line 15 in file lab5.s
   Uses
      At line 31 in file lab5.s
Comment: U0LCR used once
U0LSR E000C014

Symbol: U0LSR
   Definitions
      At line 16 in file lab5.s
   Uses
      At line 132 in file lab5.s
      At line 145 in file lab5.s
      At line 151 in file lab5.s

U0RBR E000C000

Symbol: U0RBR
   Definitions
      At line 13 in file lab5.s
   Uses
      At line 136 in file lab5.s
Comment: U0RBR used once
U0THR E000C000

Symbol: U0THR
   Definitions
      At line 14 in file lab5.s
   Uses
      At line 149 in file lab5.s
Comment: U0THR used once
5 symbols
365 symbols in table
